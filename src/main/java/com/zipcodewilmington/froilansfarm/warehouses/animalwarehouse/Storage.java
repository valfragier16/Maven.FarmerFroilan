package com.zipcodewilmington.froilansfarm.warehouses.animalwarehouse;

import java.util.ArrayList;
import java.util.List;

public class Storage {

    public static ArrayList<ChickenCoop> createMultiChickenCoops(Integer amount) {
        ArrayList<ChickenCoop> chickenCoops = new ArrayList<ChickenCoop>();

        for(int i = 0; i<amount; i++){
            chickenCoops.add(new ChickenCoop());
        }

        return chickenCoops;
    }

    public static ChickenCoop createSingleChickenCoop() {
        ChickenCoop chickenCoop = createMultiChickenCoop(1).get(0);

        return chickenCoop;
    }

    public static EggBasket createEggBasket(Integer amountOfEggs){
        List<EggBasket> eggBasket = new ArrayList<>();

        for(int i = 0; i < amountOfEggs; i++){
            eggBasket.add(new EggBasket());
        }
        return (EggBasket) eggBasket;
    }

    public static ArrayList<CornSilo> createMultiCornSilos(Integer amount) {
        ArrayList<CornSilo> cornSilos = new ArrayList<CornSilo>();

        for(int i = 0; i<amount; i++){
            cornSilos.add(new CornSilo());
        }

        return cornSilos;
    }

    public static CornSilo createSingleCornSilo() {
        CornSilo cornSilo = createMultiCornSilos(1).get(0);

        return cornSilo;
    }

    public static ArrayList<CropRows> createMultiCropRows(Integer amount) {
        ArrayList<CropRows> cropRows = new ArrayList<CropRows>();

        for(int i = 0; i<amount; i++){
            cropRows.add(new CropRows());
        }

        return cropRows;
    }

    public static CropRows createSingleCropRow() {
        CropRows cropRows = createMultiCropRows(1).get(0);

        return cropRows;
    }


    public static ArrayList<Stables> createMultiStables(Integer amount) {
        ArrayList<Stables> stables = new ArrayList<Stables>();

        for(int i = 0; i<amount; i++){
            stables.add(new Stables());
        }

        return stables;
    }

    public static Stables createSingleStables() {
        Stables stables = createMultiStables(1).get(0);

        return stables;
    }


}
